name: Greeting the new contributor 

on: [pull_request, issues]

jobs:
  greeting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/first-interaction@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        issue-message: > 
            Welcome to offical website repository for [json-schema.org](https://json-schema.org/). Thanks a lot for reporting your first issue. Please check out our [contributors guide](https://github.com/json-schema-org/website/blob/main/CONTRIBUTING.md) if you plan on opening a pull request.
            For more details check out [README.md](https://github.com/json-schema-org/website?tab=readme-ov-file#-welcome-to-the-json-schema-website) file.
        pr-message: > 
            Welcome to offical repository for [json-schema.org](https://json-schema.org/). Thanks a lot for creating your first pull request. Please be sure you have reviewed the [contributors guide](https://github.com/json-schema-org/website/blob/main/CONTRIBUTING.md) for this and future pull requests. 
            For more details check out [README.md](https://github.com/json-schema-org/website?tab=readme-ov-file#-welcome-to-the-json-schema-website) file.name: Greet on PR Merge

on:
  pull_request:
    types: [closed]

jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      - name: Check if it's the user's first merge
        id: check-merge
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            const authorLogin = pr.data.user.login;

            // Fetch user's merged pull requests
            const { data: pullRequests } = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              sort: 'updated',
              direction: 'desc',
              author: authorLogin,
              per_page: 100
            });

            return {
              firstMerge: pullRequests.length === 1
            }

      - name: Greet the user if it's their first merge
        if: steps.check-merge.outputs.firstMerge == true
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const authorLogin = context.payload.pull_request.user.login;
            const greetingMessage = `ðŸŽ‰ Congratulations, @${authorLogin}! This is your first merged pull request. Thank you for your contribution! ðŸš€`;

            // Add a comment to the pull request with the greeting message
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: greetingMessage
            });
